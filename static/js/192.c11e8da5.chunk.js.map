{"version":3,"file":"static/js/192.c11e8da5.chunk.js","mappings":"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","sources":["components/MuiComponents/Stack.jsx","components/Showcase/ShowcaseComponents/Modal.jsx","components/Animation/MuiSimpleZoom.jsx","components/Showcase/ShowcaseComponents/General.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\n// const Item = styled(Paper)(({ theme }) => ({\r\n//   backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n//   ...theme.typography.body2,\r\n//   padding: theme.spacing(1),\r\n//   textAlign: 'center',\r\n//   color: theme.palette.text.secondary,\r\n// }));\r\n\r\nexport default function DividerStack({ children }) {\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      // divider={<Divider orientation=\"vertical\" flexItem />}\r\n      spacing={4}\r\n      sx={{ flexWrap: \"wrap\" }}\r\n    >\r\n      {children}\r\n    </Stack>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog({fullscreen, setFullscreen }) {\r\n\r\n  const {open, url} = fullscreen\r\n\r\n  const handleClose = () => {\r\n    setFullscreen({open: false});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: \"relative\" }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Button  color=\"inherit\" href={url} target=\"_blank\" >\r\n              Open In new Tab\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <iframe\r\n        title=\"screeshot of the webpage\"\r\n          src={url}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          style={{border: 'none'}}\r\n       />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\n\r\nexport default function SimpleZoom({ children }) {\r\n  return (\r\n    <div >\r\n      <Zoom in={true} style={{ transitionDelay: \"500ms\", width:\"100\" }}>\r\n        {children}\r\n      </Zoom>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, startTransition } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// reactSpring\r\nimport { animated } from \"@react-spring/web\";\r\n\r\n// mui\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Stack from \"../../MuiComponents/Stack\";\r\n\r\nimport Modal from './Modal'\r\n\r\nimport Transition from \"../../Animation/Transition\";\r\nimport MuiSimpleZoom from \"../../Animation/MuiSimpleZoom\";\r\n\r\nconst Loading = (e) => (\r\n  <div\r\n    style={{\r\n      backgroundColor: \"black\",\r\n      color: \"#fff\",\r\n      fontSize: \"5rem\",\r\n      width: \"100%\",\r\n    }}\r\n  >\r\n    Loading...\r\n  </div>\r\n);\r\n\r\nexport default function General() {\r\n  const [githubData, setGithubData] = useState([]);\r\n\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n  const [currCard, setCurrCard] = useState(null);\r\n\r\n  // fullscreen ?\r\n  /****\r\n   * fullscreen ? {\r\n   * position: absolute;\r\n   * width: 100vw\r\n   * height: 100vh\r\n   * }\r\n   *\r\n   */\r\n  const toggleFullscreen = {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zoom: 0.9,\r\n    display: \"inherit\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const response = await axios.get(\r\n        \"https://api.github.com/repos/kemdev/portfolio/contents/projects/general\"\r\n      );\r\n\r\n      console.log(\"Response\", response);\r\n\r\n      const data = response.data;\r\n\r\n      const path = data.map((data) => data.path);\r\n\r\n      console.log(\"PATHES NOW\", path);\r\n\r\n      setGithubData(path);\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  console.log(\"Github Paths now\", githubData);\r\n\r\n  return (\r\n    <Stack>\r\n      {githubData?.map((repo, idx) => (\r\n        <MuiSimpleZoom>\r\n          <Card\r\n            sx={{\r\n              width: \"100%\",\r\n              // width: fullscreen ? (idx === currCard ? \"100%\" : \"\") : \"100%\",\r\n              height: \"50vh\",\r\n              m: 2,\r\n              textAlign: \"left\",\r\n              borderRadius: \"15px\",\r\n            }}\r\n            // style={\r\n            //   fullscreen ? (idx === currCard ? toggleFullscreen : null) : null\r\n            // }\r\n            key={idx}\r\n          >\r\n            <CardMedia\r\n              component=\"iframe\"\r\n              alt=\"screeshot of the webpage\"\r\n              height=\"60%\"\r\n              src={\"https://kemdev.github.io/portfolio/\" + repo}\r\n              scrolling=\"no\"\r\n            />\r\n            <CardContent\r\n              sx={{ height: \"200px\", borderTop: \"5px solid hotpink\" }}\r\n            >\r\n              {/* <iframe src={'https://kemdev.github.io/portfolio/' + repo} title=\"description\"></iframe> */}\r\n              <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                {/* title */}\r\n                {repo\r\n                  .substring(repo.lastIndexOf(\"/\") + 1)\r\n                  .split(\"-\")\r\n                  .join(\" \")}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"#2B2529\"\r\n                sx={{ fontWeight: \"lighter\", fontSize: \"1.5rem\" }}\r\n              >\r\n                {/* Description */}\r\n                {repo}\r\n              </Typography>\r\n            </CardContent>\r\n            <Divider variant=\"middle\" />\r\n            <CardActions className=\"d-flex justify-content-between\">\r\n              <div>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  href={\"https://kemdev.github.io/portfolio/\" + repo}\r\n                  sx={{\r\n                    borderRadius: \"5px 15px \",\r\n                    backgroundColor: \"#2B2529\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"#0f0e0e\",\r\n                      color: \"#fff\",\r\n                      border: \"none\",\r\n                      boxShadow: \"none\",\r\n                    },\r\n                  }}\r\n                  target=\"_blank\"\r\n                >\r\n                  Live Preview\r\n                </Button>\r\n                <Button\r\n                  target=\"_blank\"\r\n                  size=\"large\"\r\n                  href={\"https://github.com/kemdev/portfolio/tree/main/\" + repo}\r\n                  sx={{\r\n                    color: \"#2B2529\",\r\n                    fontWeight: \"bold\",\r\n                    \"&:hover\": { color: \"#0f0e0e\" },\r\n                  }}\r\n                >\r\n                  Github Repo\r\n                </Button>\r\n              </div>\r\n              <Button\r\n                onClick={(e) => {\r\n                  setFullscreen({open: true, url: `https://kemdev.github.io/portfolio/${repo}`});\r\n                  setCurrCard(idx);\r\n                }}\r\n                className=\"text-dark justify-self-end\"\r\n              >\r\n                Fullscreen\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </MuiSimpleZoom>\r\n      ))}\r\n\r\n      {\r\n        fullscreen && <Modal fullscreen={fullscreen} setFullscreen={setFullscreen} />\r\n      }\r\n    </Stack>\r\n    // </animated.div>\r\n  );\r\n}\r\n"],"names":["DividerStack","children","Stack","direction","spacing","sx","flexWrap","Transition","React","props","ref","Slide","FullScreenDialog","fullscreen","setFullscreen","open","url","handleClose","Dialog","fullScreen","onClose","TransitionComponent","AppBar","position","Toolbar","IconButton","edge","color","onClick","Close","Button","href","target","title","src","width","height","style","border","SimpleZoom","Zoom","Z","in","transitionDelay","General","useState","githubData","setGithubData","setCurrCard","useEffect","getData","axios","response","console","log","data","path","map","repo","idx","Card","m","textAlign","borderRadius","CardMedia","component","alt","scrolling","CardContent","borderTop","Typography","gutterBottom","variant","substring","lastIndexOf","split","join","fontWeight","fontSize","Divider","CardActions","className","size","backgroundColor","boxShadow","e"],"sourceRoot":""}